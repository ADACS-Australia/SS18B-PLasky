# Generated by Django 2.0.7 on 2018-07-30 06:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tupakweb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataOpen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_choice', models.CharField(blank=True, choices=[('hanford', 'Hanford'), ('livingston', 'Livingston'), ('virgo', 'Virgo')], default='hanford', max_length=20)),
                ('signal_duration', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_frequency', models.IntegerField(default=2048, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data_data_open', to='tupakweb.Data')),
            ],
        ),
        migrations.CreateModel(
            name='DataSimulated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_choice', models.CharField(blank=True, choices=[('hanford', 'Hanford'), ('livingston', 'Livingston'), ('virgo', 'Virgo')], default='hanford', max_length=20)),
                ('signal_duration', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_frequency', models.IntegerField(default=2048, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data_data_simulated', to='tupakweb.Data')),
            ],
        ),
        migrations.CreateModel(
            name='Prior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prior_choice', models.CharField(blank=True, choices=[('fixed', 'Fixed'), ('uniform', 'Uniform')], default='fixed', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PriorFixed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_prior_fixed', to='tupakweb.Prior')),
            ],
        ),
        migrations.CreateModel(
            name='PriorUniform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_min', models.FloatField(null=True)),
                ('value_max', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_prior_uniform', to='tupakweb.Prior')),
            ],
        ),
        migrations.CreateModel(
            name='SamplerDynesty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_livepoints', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SamplerEmcee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_steps', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SamplerNestle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_steps', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inject_or_not', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('signal_choice', models.CharField(blank=True, choices=[('bbh', 'Binary Black Hole')], default='bbh', max_length=50)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_signal', to='tupakweb.Job')),
            ],
        ),
        migrations.CreateModel(
            name='SignalBbhParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('mass_1', 'Mass 1 (M☉)'), ('mass_2', 'Mass 2 (M☉)'), ('luminosity_distance', 'Luminosity distance (Mpc)'), ('iota', 'iota'), ('psi', 'psi'), ('phase', 'phase'), ('merger_time', 'Merger time (GPS time)'), ('ra', 'Right ascension'), ('dec', 'Declination')], default='mass_1', max_length=20)),
                ('value', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_signal_bbh', to='tupakweb.Prior')),
                ('signal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signal_signal_bbh_parameter', to='tupakweb.Job')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='opendata',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='opendata',
            name='data',
        ),
        migrations.AlterUniqueTogether(
            name='signalbbh',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='signalbbh',
            name='signal',
        ),
        migrations.AlterUniqueTogether(
            name='signalinjection',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='signalinjection',
            name='job',
        ),
        migrations.AlterUniqueTogether(
            name='simulateddata',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='simulateddata',
            name='data',
        ),
        migrations.RenameField(
            model_name='sampler',
            old_name='category',
            new_name='sampler_choice',
        ),
        migrations.RemoveField(
            model_name='sampler',
            name='sampler_input_name',
        ),
        migrations.RemoveField(
            model_name='sampler',
            name='sampler_input_value',
        ),
        migrations.DeleteModel(
            name='OpenData',
        ),
        migrations.DeleteModel(
            name='SignalBbh',
        ),
        migrations.DeleteModel(
            name='SignalInjection',
        ),
        migrations.DeleteModel(
            name='SimulatedData',
        ),
        migrations.AddField(
            model_name='samplernestle',
            name='sampler',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_nestle', to='tupakweb.Sampler'),
        ),
        migrations.AddField(
            model_name='sampleremcee',
            name='sampler',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_emcee', to='tupakweb.Sampler'),
        ),
        migrations.AddField(
            model_name='samplerdynesty',
            name='sampler',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_dynesty', to='tupakweb.Sampler'),
        ),
        migrations.AlterUniqueTogether(
            name='signalbbhparameter',
            unique_together={('signal', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='signal',
            unique_together={('job', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='samplernestle',
            unique_together={('sampler', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='sampleremcee',
            unique_together={('sampler', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='samplerdynesty',
            unique_together={('sampler', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='prioruniform',
            unique_together={('prior', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='priorfixed',
            unique_together={('prior', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='datasimulated',
            unique_together={('data', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='dataopen',
            unique_together={('data', 'id')},
        ),
    ]
