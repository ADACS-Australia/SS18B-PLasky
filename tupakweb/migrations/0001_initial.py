# Generated by Django 2.0.7 on 2018-08-10 14:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_choice', models.CharField(choices=[('simulated', 'Simulated data'), ('open', 'Open data')], default='simulated', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DataOpen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_choice', models.CharField(choices=[('hanford', 'Hanford'), ('livingston', 'Livingston'), ('virgo', 'Virgo')], default='hanford', max_length=20)),
                ('signal_duration', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_frequency', models.IntegerField(default=2048, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='DataSimulated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_choice', models.CharField(choices=[('hanford', 'Hanford'), ('livingston', 'Livingston'), ('virgo', 'Virgo')], default='hanford', max_length=20)),
                ('signal_duration', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('sample_frequency', models.IntegerField(default=2048, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Queued', 'Queued'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Error', 'Error'), ('Saved', 'Saved'), ('Wall Time Exceeded', 'Wall Time Exceeded'), ('Deleted', 'Deleted')], default='Draft', max_length=20)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_job', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prior_choice', models.CharField(blank=True, choices=[('fixed', 'Fixed'), ('uniform', 'Uniform')], default='fixed', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PriorFixed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_prior_fixed', to='tupakweb.Prior')),
            ],
        ),
        migrations.CreateModel(
            name='PriorUniform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_min', models.FloatField(null=True)),
                ('value_max', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_prior_uniform', to='tupakweb.Prior')),
            ],
        ),
        migrations.CreateModel(
            name='Sampler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampler_choice', models.CharField(blank=True, choices=[('dynesty', 'Dynesty'), ('nestle', 'Nestle')], default='dynesty', max_length=15)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_sampler', to='tupakweb.Job')),
            ],
        ),
        migrations.CreateModel(
            name='SamplerDynesty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_livepoints', models.IntegerField(null=True)),
                ('sampler', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_dynesty', to='tupakweb.Sampler')),
            ],
        ),
        migrations.CreateModel(
            name='SamplerEmcee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_steps', models.IntegerField(null=True)),
                ('sampler', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_emcee', to='tupakweb.Sampler')),
            ],
        ),
        migrations.CreateModel(
            name='SamplerNestle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_steps', models.IntegerField(null=True)),
                ('sampler', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sampler_sampler_nestle', to='tupakweb.Sampler')),
            ],
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inject_or_not', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('signal_choice', models.CharField(blank=True, choices=[('bbh', 'Binary Black Hole')], default='bbh', max_length=50)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_signal', to='tupakweb.Job')),
            ],
        ),
        migrations.CreateModel(
            name='SignalBbhParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('mass_1', 'Mass 1 (M☉)'), ('mass_2', 'Mass 2 (M☉)'), ('luminosity_distance', 'Luminosity distance (Mpc)'), ('iota', 'iota'), ('psi', 'psi'), ('phase', 'phase'), ('merger_time', 'Merger time (GPS time)'), ('ra', 'Right ascension'), ('dec', 'Declination')], default='mass_1', max_length=20)),
                ('value', models.FloatField(null=True)),
                ('prior', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prior_signal_bbh', to='tupakweb.Prior')),
                ('signal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signal_signal_bbh_parameter', to='tupakweb.Job')),
            ],
        ),
        migrations.AddField(
            model_name='datasimulated',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_data_simulated', to='tupakweb.Job'),
        ),
        migrations.AddField(
            model_name='dataopen',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_data_open', to='tupakweb.Job'),
        ),
        migrations.AddField(
            model_name='data',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_data', to='tupakweb.Job'),
        ),
        migrations.AlterUniqueTogether(
            name='job',
            unique_together={('user', 'name')},
        ),
    ]
